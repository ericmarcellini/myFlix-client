{"version":3,"sources":["components/movie-view/movie-view.jsx","components/login-view/login-view.jsx","components/signup-view/signup-view.jsx","components/director-view/director-view.jsx","components/genre-view/genre-view.jsx","actions/actions.js","components/profile-view/profile-view.jsx","components/navbar-view/navbar-view.jsx","components/visibility-filter-input/visibility-filter-input.jsx","components/movie-card/movie-card.jsx","components/movies-list/movies-list.jsx","components/main-view/main-view.jsx","reducers/reducers.js","index.js"],"names":["MovieView","React","Component","keypressCallback","event","console","log","key","componentDidMount","document","addEventListener","this","componentWillUnmount","removeEventListener","addFav","token","localStorage","getItem","username","axios","post","concat","props","movie","_id","headers","Authorization","then","response","alert","render","onBackClick","_jsxs","className","children","_jsx","src","ImagePath","Title","Description","Button","onClick","Link","to","Director","Name","variant","Genre","value","e","LoginView","setUsername","useState","password","setPassword","Form","Group","controlId","Label","Control","type","onChange","target","Feedback","preventDefault","Username","Password","data","onLoggedIn","catch","SignupView","email","setEmail","birthday","setBirthday","validated","handleSubmit","formValidation","Email","Birthday","window","open","onSignup","usernameError","emailError","passwordError","birthdayError","isValid","length","usernameBad","includes","passwordBad","birthdayBad","emailBad","onSubmit","noValidate","placeholder","required","Text","history","goBack","DirectorView","director","Bio","Born","GenreView","genre","SET_MOVIES","SET_FILTER","SHOW_USER","ProfileView","constructor","super","handleUpdateUser","setState","currentTarget","checkValidity","stopPropagation","put","state","setItem","error","FavoriteMovies","accessToken","getUser","get","handleDeleteUser","delete","removeItem","input","handleRemove","Id","movies","Container","Row","Col","Card","style","width","Header","ListGroup","Item","map","find","favList","md","Img","Body","connect","user","showUser","NavbarView","Navbar","bg","Brand","Nav","as","setFilter","visibilityFilter","MovieCard","filteredMovies","filter","m","toLowerCase","_Fragment","margin","VisibilityFilterInput","MainView","selectedMovie","userData","getMovies","getUserinfo","authData","setSelectedMovie","newSelectedMovie","onLoggedOut","setMovies","users","getUsers","signup","Router","Route","exact","path","MoviesList","Redirect","_ref","match","params","movieId","_ref2","name","_ref3","moviesApp","combineReducers","arguments","undefined","action","store","createStore","MyFlixApplication","Provider","container","getElementsByClassName","ReactDom","createElement"],"mappings":"4OAMO,MAAMA,UAAkBC,IAAMC,UAEjCC,iBAAiBC,GACbC,QAAQC,IAAIF,EAAMG,IACtB,CAEAC,oBACIC,SAASC,iBAAiB,WAAYC,KAAKR,iBAC/C,CAEAS,uBACIH,SAASI,oBAAoB,WAAYF,KAAKR,iBAClD,CAGAW,SACI,MAAMC,EAAQC,aAAaC,QAAQ,SAC7BC,EAAWF,aAAaC,QAAQ,QAEtCE,IAAMC,KAAK,4CAADC,OAA6CH,EAAQ,YAAAG,OAAWV,KAAKW,MAAMC,MAAMC,KAAM,CAAC,EAAG,CACnGC,QAAS,CAAEC,cAAc,UAADL,OAAYN,MAErCY,MAAKC,IACFvB,QAAQC,IAAI,gCACZuB,MAAM,kDAAkD,GAEhE,CACAC,SACI,MAAM,MAAEP,EAAK,YAAEQ,GAAgBpB,KAAKW,MAEpC,OACIU,eAAA,OAAKC,UAAU,aAAYC,SAAA,CACvBC,cAAA,OAAKF,UAAU,eAAcC,SACzBC,cAAA,OAAKC,IAAKb,EAAMc,cAEpBL,eAAA,OAAKC,UAAW,cAAaC,SAAA,CACzBC,cAAA,QAAMF,UAAU,QAAOC,SAAC,YACxBC,cAAA,QAAMF,UAAU,QAAOC,SAAEX,EAAMe,WAEnCN,eAAA,OAAKC,UAAW,oBAAmBC,SAAA,CAC/BC,cAAA,QAAMF,UAAU,QAAOC,SAAC,kBACxBC,cAAA,QAAMF,UAAU,QAAOC,SAAEX,EAAMgB,iBAEnCJ,cAACK,IAAM,CAACC,QAASA,KAAMV,EAAY,KAAK,EAAGG,SAAC,UAE5CC,cAACO,IAAI,CAACC,GAAE,cAAAtB,OAAgBE,EAAMqB,SAASC,MAAOX,SAC7CC,cAACK,IAAM,CAACM,QAAQ,YAAWZ,SAAC,eAG7BC,cAACO,IAAI,CAACC,GAAE,WAAAtB,OAAcE,EAAMwB,MAAMF,MAAOX,SACxCC,cAACK,IAAM,CAACM,QAAQ,YAAWZ,SAAC,YAG7BC,cAACK,IAAM,CAACM,QAAQ,OAAOE,MAAOzB,EAAMC,IAAKiB,QAAUQ,GAAKtC,KAAKG,OAAOS,EAAO0B,GAAGf,SAAC,uBAK3F,E,WCzDG,SAASgB,EAAU5B,GACxB,MAAQJ,EAAUiC,GAAgBC,mBAAS,KACnCC,EAAUC,GAAgBF,mBAAS,IAoBzC,OACEpB,eAACuB,IAAI,CAACtB,UAAU,aAAYC,SAAA,CAC1BF,eAACuB,IAAKC,MAAK,CAACC,UAAU,eAAcvB,SAAA,CAClCC,cAACoB,IAAKG,MAAK,CAAAxB,SAAC,cACZC,cAACoB,IAAKI,QAAO,CAACC,KAAK,OAAOC,SAAUZ,GAAKE,EAAYF,EAAEa,OAAOd,YAGhEhB,eAACuB,IAAKC,MAAK,CAACC,UAAU,eAAcvB,SAAA,CAClCC,cAACoB,IAAKG,MAAK,CAAAxB,SAAC,cACZC,cAACoB,IAAKI,QAAO,CAACC,KAAK,WAAWC,SAAUZ,GAAKK,EAAYL,EAAEa,OAAOd,SAClEb,cAACoB,IAAKI,QAAQI,SAAQ,CAACH,KAAK,UAAS1B,SAAC,4BAGxCC,cAACK,IAAM,CAACM,QAAQ,UAAUc,KAAK,SAASnB,QA/BxBQ,IACpBA,EAAEe,iBACF3D,QAAQC,IAAIY,EAAUmC,GAEtBlC,IAAMC,KAAK,2CAA2C,CACpD6C,SAAU/C,EACVgD,SAAUb,IAGX1B,MAAKC,IACJ,MAAMuC,EAAOvC,EAASuC,KACtB7C,EAAM8C,WAAWD,EAAK,IAEvBE,OAAMpB,IACL5C,QAAQC,IAAI,gBAAgB,GAC5B,EAgBgE4B,SAAC,WAEtD,YACTC,cAACO,IAAI,CAACC,GAAE,UAAYT,SAClBC,cAACK,IAAM,CAACM,QAAQ,UAASZ,SAAC,gBAIpC,CC3CO,SAASoC,EAAWhD,GACvB,MAAQJ,EAAUiC,GAAgBC,mBAAS,KACnCC,EAAUC,GAAgBF,mBAAS,KACnCmB,EAAOC,GAAapB,mBAAS,KAC7BqB,EAAUC,GAAgBtB,mBAAS,IACrCuB,EAAYvB,mBAAS,MAEzBwB,EAAgB3B,IAClBA,EAAEe,iBACea,MAEb1D,IAAMC,KAAK,2CAA4C,CACnD6C,SAAU/C,EACVgD,SAAUb,EACVyB,MAAOP,EACPQ,SAAUN,IAEX9C,MAAKC,IACJ,MAAMuC,EAAOvC,EAASuC,KACtB9D,QAAQC,IAAI6D,GACZtC,MAAM,4BACNmD,OAAOC,KAAK,IAAK,QAAQ,IAE1BZ,OAAMpB,IACLpB,MAAM,yBAAyB,IAGnCxB,QAAQC,IAAIY,EAAUmC,EAAUkB,EAAOE,GACvCnD,EAAM4D,SAAShE,EAAUmC,EAAUkB,EAAOE,GAC7C,EAIGI,EAAiBA,KACrB,MAAMM,EAAgB,CAAC,EACjBC,EAAa,CAAC,EACdC,EAAgB,CAAC,EACjBC,EAAgB,CAAC,EAEvB,IAAIC,GAAU,EAiBd,OAhBIrE,EAASsE,OAAS,GACpBL,EAAcM,YAAc,gEAC5BF,GAAU,GAEFhB,EAAMmB,SAAS,KAIhBrC,EAASmC,OAAS,GACzBH,EAAcM,YAAc,oDAC5BJ,GAAU,GAEU,KAAbd,IACPa,EAAcM,YAAc,8BAC5BL,GAAU,IATVH,EAAWS,SAAW,2BACtBN,GAAU,GAULA,CAAO,EAGhB,OACEvD,eAACuB,IAAI,CAACtB,UAAU,UAAU6D,SAAUlB,EAAcmB,YAAU,EAACpB,UAAWA,EAAUzC,SAAA,CAEhFF,eAACuB,IAAKC,MAAK,CAACC,UAAU,oBAAmBvB,SAAA,CACvCC,cAACoB,IAAKG,MAAK,CAAAxB,SAAC,aACZC,cAACoB,IAAKI,QAAO,CAACC,KAAK,OAAOoC,YAAY,iBAAiBhD,MAAO9B,EAAU2C,SAAUZ,GAAKE,EAAYF,EAAEa,OAAOd,OAAQiD,UAAQ,IAC5H9D,cAACoB,IAAKI,QAAQI,SAAQ,CAACH,KAAK,UAAS1B,SAAC,8DAGxCF,eAACuB,IAAKC,MAAK,CAACC,UAAU,oBAAmBvB,SAAA,CACvCC,cAACoB,IAAKG,MAAK,CAAAxB,SAAC,aACZC,cAACoB,IAAKI,QAAO,CAACC,KAAK,WAAWoC,YAAY,mBAAmBhD,MAAOK,EAAUQ,SAAUZ,GAAKK,EAAYL,EAAEa,OAAOd,OAAQiD,UAAQ,IAClI9D,cAACoB,IAAKI,QAAQI,SAAQ,CAACH,KAAK,UAAS1B,SAAC,qCACtCC,cAACoB,IAAK2C,KAAI,CAAAhE,SAAC,mDAGbF,eAACuB,IAAKC,MAAK,CAACC,UAAU,iBAAgBvB,SAAA,CACpCC,cAACoB,IAAKG,MAAK,CAAAxB,SAAC,UACZC,cAACoB,IAAKI,QAAO,CAACC,KAAK,QAAQoC,YAAY,oBAAoBhD,MAAOuB,EAAOV,SAAUZ,GAAKuB,EAASvB,EAAEa,OAAOd,OAAQiD,UAAQ,IAC1H9D,cAACoB,IAAKI,QAAQI,SAAQ,CAACH,KAAK,UAAS1B,SAAC,kCACtCC,cAACoB,IAAK2C,KAAI,CAAAhE,SAAC,4CAGZF,eAACuB,IAAKC,MAAK,CAACC,UAAU,oBAAmBvB,SAAA,CACxCC,cAACoB,IAAKG,MAAK,CAAAxB,SAAC,aACZC,cAACoB,IAAKI,QAAO,CAACC,KAAK,OAAOoC,YAAY,aAAahD,MAAOyB,EAAUZ,SAAUZ,GAAKyB,EAAYzB,EAAEa,OAAOd,OAAQiD,UAAQ,OAG1HjE,eAAA,QAAAE,SAAA,CACEC,cAACK,IAAM,CAACoB,KAAK,SAASnB,QAASmC,EAAa1C,SAAC,WAAe,YAC5DC,cAACK,IAAM,CAACM,QAAQ,YAAYL,QAAS0D,QAAQC,OAAOlE,SAAC,cAI7D,CC/FO,MAAMmE,UAAqBpG,IAAMC,UACpC4B,SACI,MAAK,SAAEwE,EAAQ,YAAEvE,GAAgBpB,KAAKW,MAEtC,OACIU,eAAA,OAAKC,UAAU,gBAAeC,SAAA,CAC1BF,eAAA,OAAKC,UAAU,gBAAeC,SAAA,CAC1BC,cAAA,QAAMF,UAAU,QAAOC,SAAC,WACxBC,cAAA,QAAMF,UAAU,QAAOC,SAAEoE,EAASzD,UAEtCb,eAAA,OAAKC,UAAU,eAAcC,SAAA,CACzBC,cAAA,QAAMF,UAAU,QAAOC,SAAC,UACxBC,cAAA,QAAMF,UAAU,QAAOC,SAAEoE,EAASC,SAEtCvE,eAAA,OAAKC,UAAU,oBAAmBC,SAAA,CAC9BC,cAAA,QAAMF,UAAU,QAAOC,SAAC,eACxBC,cAAA,QAAMF,UAAU,QAAOC,SAAEoE,EAASE,UAEtCrE,cAACK,IAAM,CAACC,QAASA,KAAMV,EAAY,KAAK,EAAGG,SAAC,YAGxD,ECrBG,MAAMuE,UAAkBxG,IAAMC,UACjC4B,SACI,MAAM,MAAE4E,EAAK,YAAE3E,GAAgBpB,KAAKW,MAEpC,OACIU,eAAA,OAAKC,UAAU,aAAYC,SAAA,CACvBF,eAAA,OAAKC,UAAU,aAAYC,SAAA,CACvBC,cAAA,QAAMF,UAAU,QAAOC,SAAC,WACxBC,cAAA,QAAMF,UAAU,QAAOC,SAAEwE,EAAM7D,UAEnCb,eAAA,OAAKC,UAAU,oBAAmBC,SAAA,CAC9BC,cAAA,QAAMF,UAAU,QAAOC,SAAC,kBACxBC,cAAA,QAAMF,UAAU,QAAOC,SAAEwE,EAAMnE,iBAEnCJ,cAACK,IAAM,CAACC,QAASA,KAAMV,EAAY,KAAK,EAAGG,SAAC,YAGxD,E,oCCtBG,MAAMyE,EAAa,aACbC,EAAa,aACbC,EAAY,YCMlB,MAAMC,UAAoB7G,IAAMC,UACnC6G,cACIC,QAyDJ,KACAC,iBAAoBhE,IAChBtC,KAAKuG,SAAS,CACVvC,UAAW,OAIf,IAA6B,IADhB1B,EAAEkE,cACNC,gBAML,OALAnE,EAAEe,iBACFf,EAAEoE,uBACF1G,KAAKuG,SAAS,CACVvC,WAAW,IAGjB1B,EAAEe,iBAEJ,MAAM9C,EAAWF,aAAaC,QAAQ,QAChCF,EAAQC,aAAaC,QAAQ,SAEnCE,IAAMmG,IAAI,4CAADjG,OAA6CH,GAAW,CAC7D+C,SAAUtD,KAAK4G,MAAMtD,SACrBC,SAAUvD,KAAK4G,MAAMrD,SACrBY,MAAOnE,KAAK4G,MAAMzC,MAClBC,SAAUpE,KAAK4G,MAAMxC,UAEzB,CAACtD,QAAS,CAAEC,cAAc,UAADL,OAAYN,MAEpCY,MAAMC,IAEHC,MAAM,oBACNlB,KAAKuG,SAAS,CACVjD,SAAUrC,EAASuC,KAAKF,SACxBC,SAAUtC,EAASuC,KAAKD,SACxBY,MAAOlD,EAASuC,KAAKW,MACrBC,SAAUnD,EAASuC,KAAKY,WAEhC/D,aAAawG,QAAQ,OAAQ7G,KAAK4G,MAAMtD,SAAS,IAEhDI,OAAM,SAAUoD,GACbpH,QAAQC,IAAImH,EAChB,GAAE,EAhGF9G,KAAK4G,MAAQ,CACTtD,SAAS,GACTC,SAAU,GACVY,MAAO,GACPC,SAAU,GACV2C,eAAgB,GAChB/C,UAAW,OAEnB,CAEAnE,oBACI,IAAImH,EAAc3G,aAAaC,QAAQ,SACnB,OAAhB0G,GACAhH,KAAKiH,QAAQD,EAErB,CAGAC,QAAQ7G,GACJ,MAAMG,EAAWF,aAAaC,QAAQ,QACtCE,IAAM0G,IAAI,4CAADxG,OAA6CH,GAAY,CAChEO,QAAS,CAAEC,cAAc,UAADL,OAAYN,MAEnCY,MAAKC,IACJjB,KAAKuG,SAAS,CACZjD,SAAUrC,EAASuC,KAAKF,SACxBC,SAAUtC,EAASuC,KAAKD,SACxBY,MAAOlD,EAASuC,KAAKW,MACrBC,SAAUnD,EAASuC,KAAKY,SACxB2C,eAAgB9F,EAASuC,KAAKuD,gBAC9B,IAEHrD,OAAM,SAAUoD,GACfpH,QAAQC,IAAImH,EACd,GACJ,CAGFK,iBAAiB7E,GACb,MAAM/B,EAAWF,aAAaC,QAAQ,QAChCF,EAAQC,aAAaC,QAAQ,SACnCE,IAAM4G,OAAO,4CAAD1G,OAA6CH,GAAY,CACjEO,QAAS,CAAEC,cAAc,UAADL,OAAYN,MAEvCY,MAAK,KACFE,MAAM,+CACNb,aAAagH,WAAW,QACxBhH,aAAagH,WAAW,SACxBhD,OAAOC,KAAK,iBAAiB,IAEhCZ,OAAOpB,IACJ5C,QAAQC,IAAI2C,GACZ5C,QAAQC,IAAI,sCAAsC,GAE7D,CA6CG6C,YAAY8E,GACRtH,KAAKsD,SAAWgE,EAChBtH,KAAKuG,SAAS,CACbjD,SAAWgE,GAEhB,CAEA3E,YAAY2E,GACRtH,KAAKuD,SAAW+D,EAChBtH,KAAKuG,SAAS,CACVhD,SAAW+D,GAEnB,CAEAzD,SAASyD,GACLtH,KAAKmE,MAAQmD,EACbtH,KAAKuG,SAAS,CACVpC,MAAOmD,GAEf,CAEAvD,YAAYuD,GACRtH,KAAKoE,SAAWkD,EAChBtH,KAAKuG,SAAS,CACVnC,SAAUkD,GAElB,CAIAC,aAAaC,GACT,MAAMjH,EAAWF,aAAaC,QAAQ,QAChCF,EAAQC,aAAaC,QAAQ,SACnCZ,QAAQC,IAAI6H,GACZhH,IAAM4G,OAAO,4CAAD1G,OAA6CH,EAAQ,YAAAG,OAAW8G,GAAM,CACjF1G,QAAS,CAAEC,cAAc,UAADL,OAAYN,MACnCY,MAAOC,IACNvB,QAAQC,IAAIsB,GACZjB,KAAKH,oBACLqB,MAAM,sDAAsD,IAE9DwC,OAAOpB,IACJ5C,QAAQC,IAAI2C,EAAE,GAEtB,CAGAnB,SACI,MAAM,SAAEZ,EAAQ,SAAEgD,EAAQ,MAAEK,EAAK,OAAE6D,GAAUzH,KAAKW,OAC5C,MAAEC,GAASZ,KAAKW,OAChB,eAAEoG,EAAc,UAAE/C,EAAS,SAAEI,EAAQ,SAAEN,GAAY9D,KAAK4G,MAE9D,OACAvF,eAACqG,IAAS,CAAAnG,SAAA,CAENC,cAACmG,IAAG,CAAApG,SACAF,eAACuG,IAAG,CAAArG,SAAA,CACJF,eAACwG,IAAI,CAACC,MAAO,CAAEC,MAAO,SAAUxG,SAAA,CAChCC,cAACqG,IAAKG,OAAM,CAAAzG,SAAC,sBACTF,eAAC4G,IAAS,CAAC9F,QAAQ,QAAOZ,SAAA,CAC1BC,cAACyG,IAAUC,KAAI,CAAA3G,SAACF,eAAA,KAAAE,SAAA,CAAG,aAAU,GAAAb,OAAIV,KAAK4G,MAAMtD,eAC5C9B,cAACyG,IAAUC,KAAI,CAAA3G,SAACF,eAAA,KAAAE,SAAA,CAAG,UAAO,GAAAb,OAAIV,KAAK4G,MAAMzC,YACzC3C,cAACyG,IAAUC,KAAI,CAAA3G,SAACF,eAAA,KAAAE,SAAA,CAAG,aAAU,GAAAb,OAAIV,KAAK4G,MAAMxC,qBAGhD5C,cAAA,KAAAD,SAAG,0BAGPC,cAACmG,IAAG,CAAApG,SAECwF,EAAelC,OAAS,GAAK4C,EAAOU,KAAKvH,IACtC,GAAIA,EAAMC,MAAQkG,EAAeqB,MAAMC,GAAWA,IAAYzH,EAAMC,MAChE,OACAW,cAACoG,IAAG,CAACU,GAAI,EAAE/G,SACPF,eAACwG,IAAI,CAACC,MAAO,CAACC,MAAO,SAASxG,SAAA,CAC1BC,cAACqG,IAAKU,IAAG,CAACpG,QAAQ,MAAMV,IAAKb,EAAMc,YACnCL,eAACwG,IAAKW,KAAI,CAAAjH,SAAA,CACNC,cAACqG,IAAKlG,MAAK,CAAAJ,SAAEX,EAAMe,QACnBN,eAACU,IAAI,CAACC,GAAE,WAAAtB,OAAaE,EAAMC,KAAMU,SAAA,CAC7BC,cAACK,IAAM,CAACM,QAAQ,YAAWZ,SAAC,SAAa,cAEjDC,cAACK,IAAM,CAACQ,MAAOzB,EAAMC,IAAMsB,QAAQ,SAASL,QAAWQ,IAAKtC,KAAKuH,aAAajF,EAAEa,OAAOd,MAAM,EAAEd,SAAC,gBAPhEX,EAAMC,MAclD,MAKRW,cAAA,MAAAD,SAAI,iBACRF,eAACuB,IAAI,CAACwC,YAAU,EAACpB,UAAWA,EAAW1C,UAAU,aAAe6D,SAAW7C,GAAMtC,KAAKsG,iBAAiBhE,EAAGtC,KAAKsD,SAAUtD,KAAKuD,SAAUvD,KAAKmE,MAAOnE,KAAKoE,UAAU7C,SAAA,CAC/JF,eAACuB,IAAKC,MAAK,CAACC,UAAU,oBAAmBvB,SAAA,CACrCC,cAACoB,IAAKG,MAAK,CAAAxB,SAAC,aACZC,cAACoB,IAAKI,QAAO,CAACC,KAAK,OAAOoC,YAAY,0BAA0BhD,MAAO9B,EAAU2C,SAAUZ,GAAKtC,KAAKwC,YAAYF,EAAEa,OAAOd,OAAQiD,UAAQ,IAC1I9D,cAACoB,IAAK2C,KAAI,CAACjE,UAAU,aAAYC,SAAC,qCAGlCC,cAACoB,IAAKI,QAAQI,SAAQ,CAACH,KAAK,UAAS1B,SAAC,wCAG1CF,eAACuB,IAAKC,MAAK,CAACC,UAAU,oBAAmBvB,SAAA,CACrCC,cAACoB,IAAKG,MAAK,CAAAxB,SAAC,aACZC,cAACoB,IAAKI,QAAO,CAACC,KAAK,WAAWoC,YAAY,eAAehD,MAAOkB,EAAUL,SAAUZ,GAAKtC,KAAK2C,YAAYL,EAAEa,OAAOd,OAAQiD,UAAQ,IACnI9D,cAACoB,IAAK2C,KAAI,CAACjE,UAAU,aAAYC,SAAC,qCAGlCC,cAACoB,IAAKI,QAAQI,SAAQ,CAACH,KAAK,UAAS1B,SAAC,wCAG1CF,eAACuB,IAAKC,MAAK,CAACC,UAAU,iBAAgBvB,SAAA,CAClCC,cAACoB,IAAKG,MAAK,CAAAxB,SAAC,UACZC,cAACoB,IAAKI,QAAO,CAACC,KAAK,QAAQoC,YAAY,YAAYhD,MAAOuB,EAAOV,SAAUZ,GAAKtC,KAAK6D,SAASvB,EAAEa,OAAOd,OAAQiD,UAAQ,IACvH9D,cAACoB,IAAKI,QAAQI,SAAQ,CAACH,KAAK,UAAS1B,SAAC,qCAG1CF,eAACuB,IAAKC,MAAK,CAACC,UAAU,oBAAmBvB,SAAA,CACrCC,cAACoB,IAAKG,MAAK,CAAAxB,SAAC,aACZC,cAACoB,IAAKI,QAAO,CAACC,KAAK,OAAOoC,YAAY,aAAahD,MAAOyB,EAAUZ,SAAUZ,GAAKtC,KAAK+D,YAAYzB,EAAEa,OAAOd,OAAQiD,UAAQ,OAEjI9D,cAACK,IAAM,CAACoB,KAAK,SAASnB,QAAS9B,KAAKsG,iBAAiB/E,SAAC,aAAiB,cAIvEC,cAACK,IAAM,CAACC,QAAUQ,GAAKtC,KAAKmH,iBAAiB7E,GAAGf,SAAC,kBAKzD,EA6BWkH,aA1BO7B,IACX,CAAC8B,KAAM9B,EAAM8B,KACZjB,OAAQb,EAAMa,UAwBa,CAACkB,SDnQjC,SAAkBtG,GACrB,MAAO,CAAEY,KAAMiD,EAAW7D,QAC9B,GCiQeoG,CAAqCtC,GAArCsC,I,gBCzQR,MAAMG,UAAmBtJ,IAAMC,UAClC6G,cACIC,QACArG,KAAK4G,MAAM,CAAC,CAChB,CAEAzF,SACI,MAAM,KAAEuH,GAAS1I,KAAKW,MAKtB,OACIa,cAACqH,IAAM,CAACC,GAAG,OAAO3G,QAAQ,OAAMZ,SAC5BF,eAACqG,IAAS,CAAAnG,SAAA,CACNC,cAACqH,IAAOE,MAAK,CAAAxH,SAAC,YACdF,eAAC2H,IAAG,CAAC1H,UAAU,UAASC,SAAA,CACxBC,cAACwH,IAAIjH,KAAI,CAACkH,GAAIlH,IAAMC,GATtB,IASiCT,SAAC,SAChCC,cAACwH,IAAIjH,KAAI,CAACkH,GAAIlH,IAAMC,GAVtB,IAUiCT,SAAC,WAAiB,IACjDC,cAACwH,IAAIjH,KAAI,CAACkH,GAAIlH,IAAMC,GATnB,WASiCT,SAAC,YACnCC,cAACwH,IAAIjH,KAAI,CAACkH,GAAIlH,IAAMC,GATpB,UASiCT,SAAC,mBAKtD,EChBekH,kBACb,KACA,CAAES,UHTG,SAAmB7G,GACxB,MAAO,CAAEY,KAAMgD,EAAY5D,QAC7B,GGKeoG,EARf,SAA+B9H,GAC7B,OAAOa,cAACoB,IAAKI,QAAO,CAClBE,SAAUZ,GAAK3B,EAAMuI,UAAU5G,EAAEa,OAAOd,OACxCA,MAAO1B,EAAMwI,iBACb9D,YAAY,UAEhB,ICNO,MAAM+D,UAAkB9J,IAAMC,UACjC4B,SACI,MAAM,MAAEP,GAAUZ,KAAKW,MACvB,OACIU,eAACwG,IAAI,CAAAtG,SAAA,CACDC,cAACqG,IAAKU,IAAG,CAACpG,QAAQ,MAAMV,IAAKb,EAAMc,YACnCL,eAACwG,IAAKW,KAAI,CAAAjH,SAAA,CACNC,cAACqG,IAAKlG,MAAK,CAAAJ,SAAEX,EAAMe,QACnBH,cAACqG,IAAKtC,KAAI,CAAAhE,SAAEX,EAAMgB,cAClBJ,cAACO,IAAI,CAACC,GAAE,WAAAtB,OAAaE,EAAMC,KAAMU,SAC7BC,cAACK,IAAM,CAACM,QAAQ,OAAMZ,SAAC,gBAK3C,ECYWkH,mBA3BS7B,IACtB,MAAM,iBAAEuC,GAAqBvC,EAC7B,MAAO,CAAEuC,mBAAkB,GAyBdV,EAtBf,SAAoB9H,GAClB,MAAM,OAAE8G,EAAM,iBAAE0B,GAAqBxI,EACrC,IAAI0I,EAAiB5B,EAMrB,MAJyB,KAArB0B,IACFE,EAAiB5B,EAAO6B,QAAOC,GAAKA,EAAE5H,MAAM6H,cAAczE,SAASoE,EAAiBK,kBAGjF/B,EAEEpG,eAAAoI,WAAA,CAAAlI,SAAA,CACLC,cAACoG,IAAG,CAACU,GAAI,GAAIR,MAAO,CAAE4B,OAAQ,OAAQnI,SACpCC,cAACmI,EAAqB,CAACR,iBAAkBA,MAE1CE,EAAelB,KAAIoB,GAClB/H,cAACoG,IAAG,CAACU,GAAI,EAAE/G,SACTC,cAAC4H,EAAS,CAACxI,MAAO2I,KADHA,EAAE1I,UAPHW,cAAA,OAAKF,UAAU,aAYrC,ICTA,MAAMsI,UAAiBtK,IAAMC,UAE3B6G,cACEC,QACArG,KAAK4G,MAAQ,CACXiD,cAAe,KACfnB,KAAM,KACNoB,SAAU,KAEd,CAEAjK,oBACE,IAAImH,EAAc3G,aAAaC,QAAQ,SACvBD,aAAaC,QAAQ,QACjB,OAAhB0G,IACFhH,KAAKuG,SAAS,CACZmC,KAAMrI,aAAaC,QAAQ,QAC3BF,MAAOC,aAAaC,QAAQ,WAE9BN,KAAK+J,UAAU/C,GACfhH,KAAKgK,YAAYhD,GAErB,CAIAvD,WAAWwG,GACTvK,QAAQC,IAAIsK,GACZjK,KAAKuG,SAAS,CACZmC,KAAMuB,EAASvB,KAAKpF,WAEtBtD,KAAKuG,SAAS,CACZuD,SAAUG,EAASvB,OAGrBrI,aAAawG,QAAQ,QAASoD,EAAS7J,OACvCC,aAAawG,QAAQ,OAAQoD,EAASvB,KAAKpF,UAC3CtD,KAAK+J,UAAUE,EAAS7J,MAC1B,CAEA8J,iBAAiBC,GACfnK,KAAKuG,SAAS,CACZsD,cAAeM,GAEnB,CAGAC,cACE/J,aAAagH,WAAW,SACxBhH,aAAagH,WAAW,QACxBrH,KAAKuG,SAAS,CACZmC,KAAK,MAET,CAGAqB,UAAU3J,GACRI,IAAM0G,IAAI,4CAA6C,CACrDpG,QAAS,CAAEC,cAAc,UAADL,OAAYN,MAGrCY,MAAKC,IACJjB,KAAKW,MAAM0J,UAAUpJ,EAASuC,KAAK,IAEpCE,OAAM,SAAUoD,GACfpH,QAAQC,IAAImH,EACd,GACF,CAGAkD,YAAY5J,GACVI,IAAM0G,IAAI,uDAAwD,CAChEpG,QAAS,CAAEC,cAAc,UAADL,OAAYN,MAGrCY,MAAKC,IACJjB,KAAKuG,SAAS,CACZ+D,MAAOrJ,EAASuC,MAChB,IAGHE,OAAM,SAAUoD,GACfpH,QAAQC,IAAImH,EACd,GACF,CAEAyD,SAASnK,GACPI,IAAM0G,IAAI,2CAA4C,CACpDpG,QAAS,CAAEC,cAAc,UAADL,OAAYN,MAGrCY,MAAKC,IACJjB,KAAKuG,SAAS,CACZ+D,MAAOrJ,EAASuC,MAChB,IAGHE,OAAM,SAAUoD,GACfpH,QAAQC,IAAImH,EACd,GACF,CAEAvC,SAASiG,GACP9K,QAAQC,IAAI6K,GACZxK,KAAKuG,SAAS,CACZiE,UAEJ,CAEArJ,SACE,MAAM,OAAEsG,GAAWzH,KAAKW,OAClB,KAAE+H,GAAS1I,KAAK4G,MAEtB,OACEvF,eAACoJ,IAAM,CAAAlJ,SAAA,CACLC,cAACoH,EAAU,IACXpH,cAAA,OAAAD,SACGvB,KAAKyD,WACJjC,cAACK,IAAM,CAACM,QAAQ,iBAAiBL,QAASA,KAAQ9B,KAAKoK,aAAa,EAAG7I,SAAC,WACxEC,cAACe,EAAS,MAGdlB,eAACsG,IAAG,CAAApG,SAAA,CACFC,cAACkJ,IAAK,CAACC,OAAK,EAACC,KAAK,IAAIzJ,OAAQA,IACvBuH,EAGiB,IAAlBjB,EAAO5C,OAAqBrD,cAAA,OAAKF,UAAU,cACxCE,cAACqJ,EAAU,CAACpD,OAAQA,IAJTjG,cAACoG,IAAG,CAAArG,SACnBC,cAACe,EAAS,CAACkB,WAAYiF,GAAQ1I,KAAKyD,WAAWiF,SAMpDlH,cAACkJ,IAAK,CAACE,KAAK,UAAUzJ,OAAQA,IACxBuH,EAAalH,cAACsJ,IAAQ,CAAC9I,GAAG,MACvBR,cAACoG,IAAG,CAAArG,SACXC,cAACmC,EAAU,QAIbnC,cAACkJ,IAAK,CAACE,KAAK,mBAAmBzJ,OAAQ4J,IAAyB,IAAxB,MAAEC,EAAK,QAAExF,GAASuF,EACxD,OAAIrC,EACGlH,cAACoG,IAAG,CAACU,GAAI,EAAE/G,SAChBC,cAACnC,EAAS,CAACuB,MAAO6G,EAAOW,MAAKmB,GAAKA,EAAE1I,MAAQmK,EAAMC,OAAOC,UAAU9J,YAAaA,IAAKoE,EAAQC,aAF/EjE,cAACsJ,IAAQ,CAAC9I,GAAG,KAGxB,IAGRR,cAACkJ,IAAK,CAACE,KAAK,mBAAmBzJ,OAAQgK,IAAyB,IAAxB,MAAEH,EAAK,QAAExF,GAAS2F,EACxD,OAAIzC,EACGlH,cAACoG,IAAG,CAACU,GAAI,EAAE/G,SAChBC,cAACkE,EAAY,CAACC,SAAU8B,EAAOW,MAAKmB,GAAKA,EAAEtH,SAASC,OAAS8I,EAAMC,OAAOG,OAAMnJ,SAAUb,YAAaA,IAAKoE,EAAQC,aAFrGjE,cAACsJ,IAAQ,CAAC9I,GAAG,KAGxB,IAGRR,cAACkJ,IAAK,CAACE,KAAK,gBAAgBzJ,OAAQkK,IAAyB,IAAxB,MAAEL,EAAK,QAAExF,GAAS6F,EACrD,OAAI3C,EACGlH,cAACoG,IAAG,CAACU,GAAI,EAAE/G,SAChBC,cAACsE,EAAS,CAACC,MAAO0B,EAAOW,MAAKmB,GAAKA,EAAEnH,MAAMF,OAAS8I,EAAMC,OAAOG,OAAMhJ,MAAOhB,YAAaA,IAAKoE,EAAQC,aAFzFjE,cAACsJ,IAAQ,CAAC9I,GAAG,KAGxB,IAGRR,cAACkJ,IAAK,CAACE,KAAK,WAAazJ,OAASA,CAAC6J,EAAOxF,IACpCkD,EACGlH,cAACoG,IAAG,CAACU,GAAK,EAAE/G,SACjBC,cAAC2E,EAAW,CAACuC,KAAM1I,KAAK4G,MAAMkD,SAAU/C,eAAgB2B,EAAK3B,eAAgBU,OAAQA,EAAQrG,YAAaA,IAAMoE,EAAQC,aAFzGjE,cAACsJ,IAAQ,CAAC9I,GAAI,aASzC,EAMayG,mBAJO7B,IACb,CAAEa,OAAQb,EAAMa,UAGe,CAAE4C,UNlMnC,SAAmBhI,GACxB,MAAO,CAAEY,KAAM+C,EAAY3D,QAC7B,GMgMeoG,CAAyCmB,G,QCxKxD,MAAM0B,EAAYC,YAAgB,CAChCpC,iBA5BF,WAA+C,IAArBvC,EAAK4E,UAAA3G,OAAA,QAAA4G,IAAAD,UAAA,GAAAA,UAAA,GAAG,GAAIE,EAAMF,UAAA3G,OAAA,EAAA2G,UAAA,QAAAC,EAC1C,OAAQC,EAAOzI,OACRgD,EACIyF,EAAOrJ,MAEPuE,CAEb,EAsBEa,OApBF,WAAqC,IAArBb,EAAK4E,UAAA3G,OAAA,QAAA4G,IAAAD,UAAA,GAAAA,UAAA,GAAG,GAAIE,EAAMF,UAAA3G,OAAA,EAAA2G,UAAA,QAAAC,EAChC,OAAQC,EAAOzI,OACR+C,EACI0F,EAAOrJ,MAEPuE,CAEb,EAcE8B,KAZF,WAAkC,IAApB9B,EAAK4E,UAAA3G,OAAA,QAAA4G,IAAAD,UAAA,GAAAA,UAAA,GAAG,GAAIE,EAAMF,UAAA3G,OAAA,EAAA2G,UAAA,QAAAC,EAC5B,OAAOC,EAAOzI,OACLiD,EACMwF,EAAOrJ,MAEPuE,CAEnB,IAQe0E,Q,MC1Bf,MAAMK,EAAQC,YAAYN,GAE1B,MAAMO,UAA0BvM,IAAMC,UAClC4B,SACE,OACAK,cAACsK,IAAQ,CAACH,MAAOA,EAAMpK,SACrBC,cAACkG,IAAS,CAAAnG,SACRC,cAACoI,EAAQ,OAIf,EAIJ,MAAMmC,EAAYjM,SAASkM,uBAAuB,iBAAiB,GAGnEC,IAAS9K,OAAO7B,IAAM4M,cAAcL,GAAoBE,E","file":"static/js/main.e92d0db7.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport Button from 'react-bootstrap/Button';\nimport axios from 'axios';\nimport { Link } from \"react-router-dom\";\n\nexport class MovieView extends React.Component {\n\n    keypressCallback(event){\n        console.log(event.key);\n    }\n\n    componentDidMount(){\n        document.addEventListener('keypress', this.keypressCallback);\n    }\n\n    componentWillUnmount(){\n        document.removeEventListener('keypress', this.keypressCallback);\n    }\n    \n    /* add movies to favorites */\n    addFav(){\n        const token = localStorage.getItem('token');\n        const username = localStorage.getItem('user');\n\n        axios.post(`https://myflixdb1112.herokuapp.com/users/${username}/movies/${this.props.movie._id}`,{}, {\n          headers: { Authorization: `Bearer ${token}` }\n    })\n        .then(response => {\n            console.log('Movie added to favorite list')\n            alert('Movie has been successfully added to favorites.')\n        })\n    }\n    render() {\n        const { movie, onBackClick } = this.props;\n\n        return (\n            <div className=\"movie-view\">\n                <div className=\"movie-poster\">\n                    <img src={movie.ImagePath}/>\n                </div>\n                <div className =\"movie-title\">\n                    <span className=\"label\">Title: </span>\n                    <span className=\"value\">{movie.Title}</span>\n                </div>\n                <div className =\"movie-description\">\n                    <span className=\"label\">Description: </span>\n                    <span className=\"value\">{movie.Description}</span>\n                </div>\n                <Button onClick={()=> {onBackClick(null);}}>Back!</Button>\n                \n                <Link to={`/directors/${movie.Director.Name}`}>\n                 <Button variant='secondary'>Director</Button>\n                </Link>\n\n                <Link to ={`/genres/${movie.Genre.Name}`}>\n                 <Button variant='secondary'>Genre</Button>\n                </Link>\n\n                <Button variant='dark' value={movie._id} onClick={(e)=> this.addFav(movie, e)}>\n                    Add to favorites\n                </Button>\n            </div>\n        );\n    }\n}\n\n\nMovieView.propTypes = {\n    movie: PropTypes.shape({\n        ImagePath: PropTypes.string.isRequired,\n        Title: PropTypes.string.isRequired,\n        Description: PropTypes.string.isRequired,\n\n        /* Director: PropType.shape({\n            Name: PropType.string.isRequired,\n            Birthday: PropType.string.isRequired, // Unsure if it was Born or Birthday\n        }),\n\n        Genre: PropTypes.shape({\n            Name: PropTypes.string.isRequired\n        }), */\n    }),\n} \n ","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport axios from 'axios';\nimport { Link } from \"react-router-dom\";\n\nexport function LoginView(props) {\n  const [ username, setUsername ] = useState('');\n  const [ password, setPassword ] = useState('');\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    console.log(username, password);\n    /* Send a request to the server for authentication */\n    axios.post('https://myflixdb1112.herokuapp.com/login',{                           \n      Username: username,\n      Password: password\n    })\n    /* then call props.onLoggedIn(username) */\n    .then(response => {\n      const data = response.data;\n      props.onLoggedIn(data);      \n    })\n    .catch(e => {\n      console.log('no such user!')\n    });\n  };\n\n    return (\n      <Form className='login-form'>\n        <Form.Group controlId='formUsername'>\n          <Form.Label>Username:</Form.Label>\n          <Form.Control type='text' onChange={e => setUsername(e.target.value)}/>\n        </Form.Group>\n\n        <Form.Group controlId='formPassword'>\n          <Form.Label>Password:</Form.Label>\n          <Form.Control type=\"password\" onChange={e => setPassword(e.target.value)}/>\n          <Form.Control.Feedback type=\"invalid\">Password not correct</Form.Control.Feedback>\n        </Form.Group>\n\n        <Button variant=\"primary\" type=\"submit\" onClick={handleSubmit}>\n        Submit\n        </Button> &nbsp;&nbsp;\n        <Link to={`/signup`}>\n          <Button variant=\"success\">Sign Up</Button>\n        </Link>\n      </Form>\n      );\n}\n\nLoginView.propTypes = {\n  user: PropTypes.shape ({\n    username: PropTypes.string.isRequired,\n    password: PropTypes.string.isRequired,\n  })\n}","import React, { useState } from 'react';\nimport axios from 'axios';\n\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport PropTypes from 'prop-types';\n\nexport function SignupView(props){\n    const [ username, setUsername ] = useState('');\n    const [ password, setPassword ] = useState('');\n    const [ email, setEmail ] = useState('');\n    const [ birthday, setBirthday ] = useState('');\n    const validated = useState(null);\n\nconst handleSubmit = (e) => {\n    e.preventDefault();\n    let setisValid = formValidation();\n    if (setisValid){\n        axios.post('https://myflixdb1112.herokuapp.com/users', {\n            Username: username,\n            Password: password,\n            Email: email,\n            Birthday: birthday\n          })\n          .then(response => {\n            const data = response.data;\n            console.log(data);\n            alert(\"User created sucessfully\")\n            window.open('/', '_self'); // the second argument '_self' is necessary so that the page will open in the current tab\n          })\n          .catch(e => {\n            alert('Username Already taken')\n          });\n\n        console.log(username, password, email, birthday);\n        props.onSignup(username, password, email, birthday);\n    };\n  };\n\n    /* Form Validation */\n  const formValidation = () => {\n    const usernameError = {};\n    const emailError = {};\n    const passwordError = {};\n    const birthdayError = {};\n\n    let isValid = true;\n    if (username.length < 6 ){\n      usernameError.usernameBad = 'Username must be alphanumeric and at least 6 characters long.'\n      isValid = false;\n    }\n    else if (!email.includes('@')) {\n      emailError.emailBad = 'Please enter your email.'\n      isValid = false;\n    }\n    else if (password.length < 6) {\n      passwordError.passwordBad = 'Your password must be at least 6 characters long.'\n      isValid = false;\n    }\n    else if (birthday === '') {\n      birthdayError.birthdayBad = 'Please enter your birthday.'\n      isValid = false;\n    }\n    return isValid;\n  };\n\n  return (\n    <Form className=\"RegForm\" onSubmit={handleSubmit} noValidate validated={validated}>\n\n      <Form.Group controlId=\"formGroupUsername\">\n        <Form.Label>Username</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"Enter username\" value={username} onChange={e => setUsername(e.target.value)} required />\n        <Form.Control.Feedback type=\"invalid\">Please provide a valid username, 6 characters or more.</Form.Control.Feedback>\n      </Form.Group>\n\n      <Form.Group controlId=\"formGroupPassword\">\n        <Form.Label>Password</Form.Label>\n        <Form.Control type=\"password\" placeholder=\"Enter a Password\" value={password} onChange={e => setPassword(e.target.value)} required />\n        <Form.Control.Feedback type=\"invalid\">Please provide a valid password.</Form.Control.Feedback>\n        <Form.Text>Password must be at least 6 characters long</Form.Text>\n      </Form.Group>\n\n      <Form.Group controlId=\"formGroupEmail\">\n        <Form.Label>Email</Form.Label>\n        <Form.Control type=\"email\" placeholder=\"example@email.com\" value={email} onChange={e => setEmail(e.target.value)} required />\n        <Form.Control.Feedback type=\"invalid\">Please provide a valid email.</Form.Control.Feedback>\n        <Form.Text>We will never share your information</Form.Text>\n      </Form.Group>\n\n       <Form.Group controlId=\"formGroupBirthday\">\n        <Form.Label>Birthday</Form.Label>\n        <Form.Control type=\"date\" placeholder=\"00-00-0000\" value={birthday} onChange={e => setBirthday(e.target.value)} required />\n      </Form.Group> \n\n      <span>\n        <Button type=\"submit\" onClick={handleSubmit}>Submit</Button> &nbsp;&nbsp;\n        <Button variant=\"secondary\" onClick={history.goBack}>Back</Button>\n      </span>\n    </Form >\n  )\n} \n\n\nSignupView.propTypes = {\n    signup: PropTypes.shape({\n      Username: PropTypes.string.isRequired,\n      Password: PropTypes.string.isRequired,\n      Email: PropTypes.string.isRequired,\n      Birthdate: PropTypes.string.isRequired\n    }),\n  };","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Button from 'react-bootstrap/Button';\n\n\nexport class DirectorView extends React.Component {\n    render(){\n        const{ director, onBackClick } = this.props;\n\n        return (\n            <div className='director-view'>\n                <div className='director-name'>\n                    <span className='label'>Name: </span>\n                    <span className='value'>{director.Name}</span>\n                </div>\n                <div className='director-bio'>\n                    <span className='label'>Bio: </span>\n                    <span className='value'>{director.Bio}</span>\n                </div>\n                <div className='director-birthday'>\n                    <span className='label'>Birthday: </span>\n                    <span className='value'>{director.Born}</span>\n                </div>\n                <Button onClick={()=> {onBackClick(null);}}>Back!</Button>\n            </div>\n        )\n    }\n}\n\nDirectorView.propTypes = {\n    director: PropTypes.shape({\n        Name: PropTypes.string.isRequired,\n        Bio: PropTypes.string.isRequired,\n        Born: PropTypes.string.isRequired // Unsure if it was Born or Birthday\n    })\n}\n\n\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Button from 'react-bootstrap/Button';\n\n\nexport class GenreView extends React.Component{\n    render(){\n        const { genre, onBackClick } = this.props;\n\n        return (\n            <div className='genre-view'>\n                <div className='genre-name'>\n                    <span className='label'>Name: </span>\n                    <span className='value'>{genre.Name}</span>    \n                </div>\n                <div className='genre-description'>\n                    <span className='label'>Description: </span>\n                    <span className='value'>{genre.Description}</span>\n                </div>\n                <Button onClick={()=> {onBackClick(null);}}>Back!</Button>\n            </div>\n        )\n    }\n}\n\nGenreView.propTypes = {\n    genre: PropTypes.shape({\n        Name: PropTypes.string.isRequired,\n        Description: PropTypes.string.isRequired\n    })\n}","export const SET_MOVIES = 'SET_MOVIES';\nexport const SET_FILTER = 'SET_FILTER';\nexport const SHOW_USER = 'SHOW_USER';\n\nexport function setMovies(value) {\n  return { type: SET_MOVIES, value };\n}\n\nexport function setFilter(value) {\n  return { type: SET_FILTER, value };\n}\n\nexport function showUser(value) {\n    return { type: SHOW_USER, value}\n}","import React from 'react';\nimport {Row, Col, Button, Container, Card, Form, Nav, NavBar, CardDeck, ListGroup, ListGroupItem, Accordion } from 'react-bootstrap';\nimport PropTypes from 'prop-types';\nimport axios from 'axios';\nimport { Link } from \"react-router-dom\";\nimport { connect } from 'react-redux';\nimport { showUser } from '../../actions/actions';\n\nexport class ProfileView extends React.Component{\n    constructor() {\n        super();\n        this.state = {\n            Username:\"\",\n            Password: \"\",\n            Email: \"\",\n            Birthday: \"\",\n            FavoriteMovies: [],\n            validated: \"null\",\n        }\n    }\n\n    componentDidMount(){\n        let accessToken = localStorage.getItem('token');\n        if (accessToken !== null){\n            this.getUser(accessToken);\n        }\n    }\n//CRUD OPERATIONS\n    // gets user \n    getUser(token) {\n        const username = localStorage.getItem('user');\n        axios.get(`https://myflixdb1112.herokuapp.com/users/${username}`, {\n          headers: { Authorization: `Bearer ${token}` }\n        })\n          .then(response => {\n            this.setState({\n              Username: response.data.Username,  \n              Password: response.data.Password,\n              Email: response.data.Email,\n              Birthday: response.data.Birthday,\n              FavoriteMovies: response.data.FavoriteMovies,\n            });\n          })\n          .catch(function (error) {\n            console.log(error);\n          });\n      }\n\n    // delete user\n    handleDeleteUser(e){\n        const username = localStorage.getItem('user'); \n        const token = localStorage.getItem('token');\n        axios.delete(`https://myflixdb1112.herokuapp.com/users/${username}`, {\n            headers: { Authorization: `Bearer ${token}`}\n        })\n        .then(() => {\n            alert('You have successfully deleted your account!');\n            localStorage.removeItem('user');\n            localStorage.removeItem('token');\n            window.open(`localhost:1234`);\n        })\n        .catch((e) => {\n            console.log(e),\n            console.log('something broke in handleDeleteUser');\n        });\n }\n\n    // update user\n    handleUpdateUser = (e) => {\n        this.setState({\n            validated: null\n        });\n\n        const form = e.currentTarget;\n        if (form.checkValidity() === false){\n            e.preventDefault();\n            e.stopPropagation();\n            this.setState({\n                validated: true,\n            });\n            return;\n        } e.preventDefault();\n\n        const username = localStorage.getItem('user');\n        const token = localStorage.getItem('token')\n\n        axios.put(`https://myflixdb1112.herokuapp.com/users/${username}`,{\n            Username: this.state.Username,\n            Password: this.state.Password,\n            Email: this.state.Email,\n            Birthday: this.state.Birthday,\n        },\n        {headers: { Authorization: `Bearer ${token}` }}  \n        )\n        .then((response) => {\n            //const data = response.data;\n            alert(\"User is updated!\");\n            this.setState({\n                Username: response.data.Username,\n                Password: response.data.Password,\n                Email: response.data.Email,\n                Birthday: response.data.Birthday\n        })\n        localStorage.setItem('user', this.state.Username);\n        })\n        .catch(function (error){\n            console.log(error);\n        });\n    }\n\n    setUsername(input) {\n        this.Username = input;\n        this.setState({\n         Username : input\n        })\n    }\n    \n    setPassword(input) {\n        this.Password = input;\n        this.setState({\n            Password : input\n        })\n    }\n    \n    setEmail(input) {\n        this.Email = input;\n        this.setState({\n            Email: input\n        })\n    }\n    \n    setBirthday(input) {\n        this.Birthday = input;\n        this.setState({\n            Birthday: input\n        })\n    }\n\n    \n    /* remove movie from favorite list*/\n    handleRemove(Id){        \n        const username = localStorage.getItem('user');\n        const token = localStorage.getItem('token');\n        console.log(Id)\n        axios.delete(`https://myflixdb1112.herokuapp.com/users/${username}/movies/${Id}`, {                                  \n         headers: { Authorization: `Bearer ${token}`}}\n        ).then ((response) => {\n           console.log(response);\n           this.componentDidMount();\n           alert('Movie has been successfully removed from favorites.')\n    })\n        .catch((e)=> {\n            console.log(e)\n        })\n    }\n\n\n    render(){\n        const { username, Password, email, movies} = this.props;\n        const { movie} = this.props;\n        const { FavoriteMovies, validated, Birthday, birthday} = this.state;\n\n        return (\n        <Container>    \n            {/* user info */}\n            <Row>\n                <Col>\n                <Card style={{ width: '22rem' }}>\n                <Card.Header>Your Information:</Card.Header>\n                    <ListGroup variant=\"flush\">\n                    <ListGroup.Item><p>Username: {`${this.state.Username}`}</p></ListGroup.Item>\n                    <ListGroup.Item><p>Email: {`${this.state.Email}`}</p></ListGroup.Item>\n                    <ListGroup.Item><p>Birthday: {`${this.state.Birthday}`}</p></ListGroup.Item>\n                </ListGroup>\n                </Card>\n                <p>Favorite Movies:</p> \n                </Col>\n            </Row>\n            <Row>\n    \n                {FavoriteMovies.length > 0 && movies.map((movie)=> {\n                    if (movie._id === FavoriteMovies.find((favList)=> favList === movie._id)){\n                        return (\n                        <Col md={6}>    \n                            <Card style={{width: '15rem'}} key={movie._id}>\n                                <Card.Img variant='top' src={movie.ImagePath}/>\n                                <Card.Body>\n                                    <Card.Title>{movie.Title}</Card.Title>\n                                    <Link to={`/movies/${movie._id}`}>\n                                        <Button variant='secondary'>Info</Button>&nbsp;&nbsp;\n                                    </Link>\n                                <Button value={movie._id}  variant='danger' onClick={ (e)=>{this.handleRemove(e.target.value)}}>\n                                    Remove\n                                </Button>\n                                </Card.Body>\n                            </Card>\n                        </Col>\n                        )\n                    }\n                })}\n            </Row>    \n        \n            {/* update form */} \n            <h1> Update Form</h1>\n        <Form noValidate validated={validated} className=\"updateForm\"   onSubmit={(e) => this.handleUpdateUser(e, this.Username, this.Password, this.Email, this.Birthday)}>\n            <Form.Group controlId=\"formGroupUsername\">\n                <Form.Label>Username</Form.Label>\n                <Form.Control type=\"text\" placeholder=\"Enter your new username\" value={username} onChange={e => this.setUsername(e.target.value)} required/>\n                <Form.Text className=\"text-muted\">\n                    Username has to be 6+ Characters\n                </Form.Text>\n                <Form.Control.Feedback type=\"invalid\">Please provide a valid username.</Form.Control.Feedback>\n            </Form.Group>\n\n            <Form.Group controlId=\"formGroupPassword\">\n                <Form.Label>Password</Form.Label>\n                <Form.Control type=\"password\" placeholder=\"New Password\" value={Password} onChange={e => this.setPassword(e.target.value)} required />\n                <Form.Text className=\"text-muted\">\n                    Password has to be 6+ Characters\n                </Form.Text>\n                <Form.Control.Feedback type=\"invalid\">Please provide a valid Password.</Form.Control.Feedback>\n            </Form.Group>\n\n            <Form.Group controlId=\"formGroupEmail\">\n                <Form.Label>Email</Form.Label>\n                <Form.Control type=\"email\" placeholder=\"New Email\" value={email} onChange={e => this.setEmail(e.target.value)} required />\n                <Form.Control.Feedback type=\"invalid\">Please provide a valid email.</Form.Control.Feedback>\n            </Form.Group>\n\n            <Form.Group controlId=\"formGroupBirthday\">\n                <Form.Label>Birthday</Form.Label>\n                <Form.Control type=\"date\" placeholder=\"00-00-0000\" value={birthday} onChange={e => this.setBirthday(e.target.value)} required />\n            </Form.Group> \n            <Button type=\"submit\" onClick={this.handleUpdateUser}> Submit </Button>&nbsp;&nbsp;\n           </Form>\n\n            {/* delete user */}\n            <Button onClick={(e)=> this.handleDeleteUser(e)}>\n                Delete User\n            </Button>\n        </Container>   \n        )\n    }\n}\n\nlet mapStateToProps = state => {\n    return {user: state.user,\n            movies: state.movies}\n}\n\nProfileView.propTypes = {\n    users: PropTypes.shape({\n        Username: PropTypes.string.isRequired,\n        Email: PropTypes.string.isRequired,\n        Birthday: PropTypes.string,\n        FavoriteMovies: PropTypes.arrayOf(\n            PropTypes.shape({\n                _id: PropTypes.string.required,\n                Title: PropTypes.string.required,\n            })\n        )\n    }),\n    movie: PropTypes.shape({\n        ImagePath: PropTypes.string.isRequired,\n        Title: PropTypes.string.isRequired,\n        Description: PropTypes.string.isRequired,\n      }),\n \n};\n\n\nexport default connect(mapStateToProps,{showUser}) (ProfileView);","import React from 'react';\nimport {Row, Col, Button, Container, Card, Form , Navbar, Nav} from 'react-bootstrap';\nimport PropTypes from 'prop-types';\nimport axios from 'axios';\nimport { Link } from \"react-router-dom\";\n\nexport class NavbarView extends React.Component{\n    constructor(){\n        super();\n        this.state={}\n    }\n\n    render (){\n        const { user } = this.props;\n        const home = `/`;\n        {/*const movies = `/movies`;*/}\n        const profile = `/profile`;\n        const signup = `/signup`;\n        return(    \n            <Navbar bg=\"dark\" variant=\"dark\">\n                <Container>\n                    <Navbar.Brand> MyFlix</Navbar.Brand>\n                    <Nav className=\"me-auto\">\n                    <Nav.Link as={Link} to = {home}>Home</Nav.Link>\n                    <Nav.Link as={Link} to = {home}>Movies</Nav.Link> {/* Home displays all movies for now. */}\n                    <Nav.Link as={Link} to = {profile}>Profile</Nav.Link>\n                    <Nav.Link as={Link} to = {signup}>Sign Up</Nav.Link>\n                    </Nav>\n                </Container>\n            </Navbar>\n        )\n}\n}\n\nexport default NavbarView","import React from 'react';\nimport { connect } from 'react-redux';\n\nimport Form from 'react-bootstrap/Form';\n\nimport { setFilter } from '../../actions/actions';\n\nfunction VisibilityFilterInput(props) {\n  return <Form.Control\n    onChange={e => props.setFilter(e.target.value)}\n    value={props.visibilityFilter}\n    placeholder=\"filter\"\n  />;\n}\n\nexport default connect(\n  null,\n  { setFilter }\n)(VisibilityFilterInput);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Button from 'react-bootstrap/Button';\nimport Card from 'react-bootstrap/Card';\n\nimport { Link } from 'react-router-dom';\n\nexport class MovieCard extends React.Component {\n    render(){\n        const { movie } = this.props;\n        return(\n            <Card>\n                <Card.Img variant='top' src={movie.ImagePath}/>\n                <Card.Body>\n                    <Card.Title>{movie.Title}</Card.Title>\n                    <Card.Text>{movie.Description}</Card.Text>\n                    <Link to={`/movies/${movie._id}`}>\n                        <Button variant='link'>Open</Button>\n                    </Link>\n                </Card.Body>\n            </Card>\n        );\n    }\n}\n\nMovieCard.propTypes = {\n  movie: PropTypes.shape({\n    ImagePath: PropTypes.string.isRequired,\n    Title: PropTypes.string.isRequired,\n    Description: PropTypes.string.isRequired,\n  }).isRequired\n};","import React from 'react';\nimport Col from 'react-bootstrap/Col';\nimport { connect } from 'react-redux';\n\nimport VisibilityFilterInput from '../visibility-filter-input/visibility-filter-input';\nimport { MovieCard } from '../movie-card/movie-card';\n\nconst mapStateToProps = state => {\n  const { visibilityFilter } = state;\n  return { visibilityFilter };\n};\n\nfunction MoviesList(props) {\n  const { movies, visibilityFilter } = props;\n  let filteredMovies = movies;\n\n  if (visibilityFilter !== '') {\n    filteredMovies = movies.filter(m => m.Title.toLowerCase().includes(visibilityFilter.toLowerCase()));\n  }\n\n  if (!movies) return <div className=\"main-view\"/>;\n\n  return <>\n    <Col md={12} style={{ margin: '1em' }}>\n      <VisibilityFilterInput visibilityFilter={visibilityFilter} />\n    </Col>\n    {filteredMovies.map(m => (\n      <Col md={3} key={m._id}>\n        <MovieCard movie={m} />\n      </Col>\n    ))}\n  </>;\n}\n\nexport default connect(mapStateToProps)(MoviesList);","import React from 'react';\nimport axios from 'axios';\n\nimport { BrowserRouter as Router, Route, Redirect } from \"react-router-dom\";\n\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Container from 'react-bootstrap/Container';\nimport Button from 'react-bootstrap/Button';\n\n// import { MovieCard } from '../movie-card/movie-card';\nimport { MovieView } from '../movie-view/movie-view';\nimport { LoginView } from '../login-view/login-view';\nimport { SignupView } from '../signup-view/signup-view';\nimport { DirectorView } from '../director-view/director-view';\nimport { GenreView } from '../genre-view/genre-view';\nimport { ProfileView } from '../profile-view/profile-view';\nimport { NavbarView} from '../navbar-view/navbar-view';\n\nimport { setMovies } from '../../actions/actions';\nimport MoviesList from '../movies-list/movies-list';\n\nimport { connect } from 'react-redux';\nclass MainView extends React.Component {\n\n  constructor(){\n    super();\n    this.state = {\n      selectedMovie: null,\n      user: null,\n      userData: null\n    };\n  }\n\n  componentDidMount(){\n    let accessToken = localStorage.getItem('token');\n    let userToken = localStorage.getItem('user');\n    if (accessToken !== null){\n      this.setState({\n        user: localStorage.getItem('user'),\n        token: localStorage.getItem('token')\n      });\n      this.getMovies(accessToken);\n      this.getUserinfo(accessToken);\n    }\n  }\n\n\n  // Log-in \n  onLoggedIn(authData) {\n    console.log(authData);\n    this.setState({\n      user: authData.user.Username\n    });\n    this.setState({\n      userData: authData.user\n    });\n\n    localStorage.setItem('token', authData.token);\n    localStorage.setItem('user', authData.user.Username);\n    this.getMovies(authData.token);\n  }\n\n  setSelectedMovie(newSelectedMovie){\n    this.setState({\n      selectedMovie: newSelectedMovie\n    });\n  }\n\n  // Log-out\n  onLoggedOut(){\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n    this.setState({\n      user:null\n    });\n  }\n\n  // gets all movies\n  getMovies(token) {\n    axios.get('https://myflixdb1112.herokuapp.com/movies', {\n      headers: { Authorization: `Bearer ${token}`}\n    })\n    \n    .then(response => {\n      this.props.setMovies(response.data);\n    })\n    .catch(function (error) {\n      console.log(error);\n    });\n  }\n\n  // gets specific users\n  getUserinfo(token){\n    axios.get('https://myflixdb1112.herokuapp.com/users/${username}', {\n      headers: { Authorization: `Beared ${token}`}\n    })\n\n    .then(response => {\n      this.setState({\n        users: response.data\n      });\n    })\n\n    .catch(function (error){\n      console.log(error);\n    });\n  }\n  // gets all users\n  getUsers(token){\n    axios.get('https://myflixdb1112.herokuapp.com/users', {\n      headers: { Authorization: `Beared ${token}`}\n    })\n\n    .then(response => {\n      this.setState({\n        users: response.data\n      });\n    })\n\n    .catch(function (error){\n      console.log(error);\n    });\n  }\n\n  onSignup(signup) {\n    console.log(signup);\n    this.setState({\n      signup,\n    });\n  }\n\n  render() {\n    const { movies } = this.props\n    const { user } = this.state;\n\n    return (\n      <Router>\n        <NavbarView/>\n        <div>\n          {this.onLoggedIn\n          ? <Button variant=\"outline-danger\" onClick={() => { this.onLoggedOut() }}>Logout</Button>\n          : <LoginView/>\n          }\n        </div>\n        <Row>\n          <Route exact path=\"/\" render={() => {\n            if (!user) return <Col>\n               <LoginView onLoggedIn={user => this.onLoggedIn(user)} /> \n            </Col> \n            if (movies.length === 0) return <div className=\"main-view\" />;\n            return <MoviesList movies={movies}/>;\n          }} />\n\n          <Route path=\"/signup\" render={() => {\n            if (user) return <Redirect to=\"/\" />\n            return <Col>\n            <SignupView />\n          </Col>\n          }} />\n\n          <Route path=\"/movies/:movieId\" render={({ match, history }) => {\n            if(!user) return <Redirect to=\"/\" />\n            return <Col md={8}>\n              <MovieView movie={movies.find(m => m._id === match.params.movieId)} onBackClick={()=> history.goBack()} />\n            </Col>\n            }} />\n\n          <Route path=\"/directors/:name\" render={({ match, history }) => {\n            if(!user) return <Redirect to=\"/\" />\n            return <Col md={8}>\n              <DirectorView director={movies.find(m => m.Director.Name === match.params.name).Director} onBackClick={()=> history.goBack()} />\n            </Col>\n            }} />\n\n          <Route path=\"/genres/:name\" render={({ match, history }) => {\n            if(!user) return <Redirect to=\"/\" />\n            return <Col md={8}>\n              <GenreView genre={movies.find(m => m.Genre.Name === match.params.name).Genre} onBackClick={()=> history.goBack()} />\n            </Col>\n            }} />\n\n          <Route path=\"/profile\"   render ={(match, history) => {\n            if(!user) return <Redirect to= \"/\" />\n            return <Col md ={8}>\n              <ProfileView user={this.state.userData} FavoriteMovies={user.FavoriteMovies} movies={movies} onBackClick={() => history.goBack()} />\n            </Col>\n          }} />\n\n          </Row>\n          </Router> \n    );\n  }\n}\nlet mapStateToProps = state => {\n  return { movies: state.movies }\n}\n\nexport default connect(mapStateToProps, { setMovies } )(MainView);","import { combineReducers } from 'redux';\nimport { SET_FILTER, SET_MOVIES, SHOW_USER } from '../actions/actions';\n\nfunction visibilityFilter(state = '', action) {\n  switch (action.type) {\n    case SET_FILTER:\n      return action.value;\n    default:\n      return state;\n  }\n}\n\nfunction movies(state = [], action) {\n  switch (action.type) {\n    case SET_MOVIES:\n      return action.value;\n    default:\n      return state;\n  }\n}\n\nfunction user(state = [], action){\n    switch(action.type){\n        case SHOW_USER:\n            return action.value;\n        default:\n            return state;    \n    }\n}\n\nconst moviesApp = combineReducers({\n  visibilityFilter,\n  movies,\n  user\n});\n\nexport default moviesApp;","import React from 'react';\nimport ReactDom from 'react-dom';\nimport MainView from './components/main-view/main-view';\nimport Container from 'react-bootstrap/Container';\nimport { createStore } from 'redux';\nimport { Provider } from 'react-redux';\nimport moviesApp from './reducers/reducers';\n// import statement to indicate that you need to bundle '/.index.scss'\nimport './index.scss';\n\nconst store = createStore(moviesApp);\n// main compoment\nclass MyFlixApplication extends React.Component {\n    render() {\n      return (\n      <Provider store={store}>\n        <Container>\n          <MainView />\n        </Container>\n      </Provider>\n      );\n    }\n  }\n\n// finds the root of your app\nconst container = document.getElementsByClassName('app-container')[0];\n\n// tells react to render your app in the root DOM element\nReactDom.render(React.createElement(MyFlixApplication), container);\n"],"sourceRoot":""}